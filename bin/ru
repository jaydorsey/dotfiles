#!/usr/bin/env ruby
# frozen_string_literal: true

# Useful for running a single test multiple times, locally
#
# 1. Save this file somewhere in your $PATH (e.g. `~/bin/ru`)
# 2. chmod +x ~/bin/ru
#
# NOTE: If you don't have a ~/bin/ folder, you can use `mkdir ~/bin`
# and then add it to your $PATH with `export PATH=$PATH:~/bin` in your
# .zshrc or .bashrc file (then restart your terminal)
#
# Usage:
#
#    # Runs this spec 15 times, because I have 16 cpus
#    > ru spec/models/user_spec.rb
#    15 processes for 15 specs, ~ 1 spec per process
#
# Note: Also take a look at the .spring.rb file in my dotfiles; put that
# in ~/.spring.rb to ensure parallel tests use a different seed
Signal.trap('INT') { abort 'Interrupted by user' }

cpus = ENV.fetch('PARALLEL_CPU_COUNT', (`sysctl -n hw.ncpu`.to_i - 1))
files = "#{ARGV[0..].join(' ')} " * cpus

# You can use bin/parallel_rspec here if you've created a binstub. Very useful if you're using spring
exec("bundle exec parallel_rspec --allow-duplicates --verbose-command --serialize-stdout --fail-fast --prefix-output-with-test-env-number -- #{files}")

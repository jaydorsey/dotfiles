% git, code

# Change branch
git checkout <branch>

$ branch: git branch | awk '{print $NF}'

# Find file with unknown path
git log --all --full-history -- "**/<file_name>.*"

# Find file with known path

git log --all --full-history -- <full_path_to_file>

# List branches merged into master

git branch --merged master

# Delete local branches that have been merged

git branch --merged master | grep -v "master" | grep -v "production" | xargs git b -D

# Search git history for text within files

git log -S "<text>" <file_name>


% tmux

# Kill tmux sessions
tmux kill-session -t <session>

$ session: tmux ls | awk '{print substr($1, 1, length($1)-1)}'

# Attach to existing tmux session
tmux attach-session -t <session>

$ session: tmux ls | awk '{print substr($1, 1, length($1)-1)}'

% redis

# Remove all keys of all existing redis databases
redis-cli FLUSHALL


% xcode

# Install Command Line Tools if you haven't already
xcode-select --install

# Enable command line tools
sudo xcode-select --switch /Library/Developer/CommandLineTools

# Enable Xcode app
sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

% font

# List installed fonts
fc-list

% macos, app, spotlight

# Disable Spotlight in a folder
touch .metadata_never_index

% rails

# Routes for specific controller
rails routes -c <controller_name>


% postgres

# Create a directory snapshot
pg_dump --jobs=8 --format=d --file=<date>.snapshot.jay <database_name>

$ date: date -u +%Y-%m-%d

# Restore a directory snapshot (note: also run w/ --section=post-data after)
pg_restore --if-exists --no-owner --clean --create --format=d --jobs=8 --dbname=<database_name> <date>.snapshot.jay --section=pre-data --section=data

$ date: date -u +%Y-%m-%d


% zsh

# List directories ordered by size
du -hs * | sort -hr

# Count files in subdirectories
find . -type f | cut -d"/" -f2 | uniq -c

# Remove duplicates in zsh_history
cat -n .zsh_history | sort -t ';' -uk2 | sort -nk1 | cut -f2- > .zsh_short_history && mv ~/.zsh_short_history ~/.zsh_history

# Sort files by number of lines
find <folder> -type f -exec wc -l {} + | sort -rn

# Sort file by lines greater than
awk 'length($0) > <max_length> {printf "%4d : %s(%4d):%s\n", length($0), FILENAME, FNR, $0}' <path_to_file>

% ctags

# Generate tags in from multiple directories
ctags -R --append . <folders>

$ folders: lsd */ -d | tr '\n' ' ' | grep -f <(git ls-files | sed "s/\/.*//" | uniq) --- --multi

# Generate tags for bundled gems in a sub-folder
ctags -R --append . $(cd <folder> && bundle list --paths)

$ folder: lsd */ -d | grep -f <(git ls-files | sed "s/\/.*//" | uniq)

# Generate tags for a ruby repository
ctags -R --languages=ruby --exclude=.git --exclude=log . $(bundle list --paths)

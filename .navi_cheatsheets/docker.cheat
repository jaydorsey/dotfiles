# https://github.com/denisidoro/cheats/blob/master/container/docker.cheat

% docker

# Remove an image
docker image rm <image_id>

# Delete an image from the local image store
docker rmi <image_id>

# Clean none/dangling images
docker rmi $(docker images --filter "dangling=true" -q --no-trunc)

# Force clean none/dangling images
docker rmi $(docker images --filter "dangling=true" -q --no-trunc) -f

# List all images that are locally stored with the Docker engine
docker images

# Build an image from the Dockerfile in the current directory and tag the image
docker build -t <image>:<version> .

# Pull an image from a registry
docker pull <image>:<version>

# Stop a running container through SIGTERM
docker stop <container_id>

# Stop a running container through SIGKILL
docker kill <container_id>

# List the networks
docker network ls

# List the running containers
docker ps

# Delete all running and stopped containers
docker rm -f $(docker ps -aq)

# Create a new zsh process inside the container and connect it to the terminal
docker run -it --rm <container_id> zsh

# Print the last lines of a container's logs
docker logs --tail 100 <container_id> | less

# Print the last lines of a container's logs and following its logs
docker logs --tail 100 <container_id> -f

# Create new network
docker network create <network_name>

$ image_id: docker images --- --headers 1 --column 3
$ container_id: docker ps --- --headers 1 --column 1


% docker-compose

# Builds, (re)creates, starts containers for all services
docker-compose up

# Builds, (re)creates, starts, and detaches containers for all services
docker-compose up -d

# Builds, (re)creates, starts container for a service
docker-compose up -d <service_name>

# Builds, (re)creates, starts, and detaches container for a service
docker-compose up -d <service_name>

# Print the last lines of a serviceâ€™s logs
docker-compose logs --tail 100 <service_name> | less

# Print the last lines of a service's logs and following its logs
docker-compose logs -f --tail 100 <service_name>

# Stops containers and removes containers, networks created by up
docker-compose down

# Execute a shell inside of a running container
docker exec -it $(docker-compose ps -q <container_name>) /bin/bash

# Docker debug a running container
docker debug $(docker-compose ps -q <container_name>)


% docker prune

# Remove all unused ctonainers, networks, images, and volumes
docker system prune -a

# Remove unused volumes
docker volume prune

# Remove unused containers
docker container prune

# Remove unused images
docker image prune

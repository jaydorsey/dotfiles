# vim: textwidth=0:filetype=sh

% git

# Change branch
git checkout <branch>

$ branch: git branch | awk '{print $NF}'

# Use main as your main branch
git branch -M main

# Find file with unknown path
git log --all --full-history -- "**/<file_name>.*"

# Find file with known path

git log --all --full-history -- <full_path_to_file>

# List branches merged into master

git branch --merged master

# Delete local branches that have been merged

git branch --merged master | grep -v "master" | grep -v "production" | xargs git b -D

# Search git history for text within files

git log -S "<text>" <file_name>

# https://stackoverflow.com/a/56054951/2892779
# Find last commit which deleted a file

git rev-list -n 1 HEAD -- <full_path_to_file>

# Empty commit

git commit --allow-empty -m "Empty commit to trigger build"

#  List files and last modification dates

git ls-files -z | xargs -0 -n1 -I{} -- git log -1 --format="%ai {}" {} 

% tmux

# Kill tmux sessions
tmux kill-session -t <session>

$ session: tmux ls | awk '{print substr($1, 1, length($1)-1)}'

# Attach to existing tmux session
tmux attach-session -t <session>

$ session: tmux ls | awk '{print substr($1, 1, length($1)-1)}'

% redis

# Remove all keys of all existing redis databases
redis-cli FLUSHALL

# Fix "MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk"
redis-cli config set stop-writes-on-bgsave-error no


% xcode

# Install Command Line Tools if you haven't already
xcode-select --install

# Enable command line tools
sudo xcode-select --switch /Library/Developer/CommandLineTools

# Enable Xcode app
sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

# Warning: A newer Command Line Tools release is available.
# Update them from Software Update in System Preferences or run:
#   softwareupdate --all --install --force
#
# If that doesn't show you an update run:
#   sudo rm -rf /Library/Developer/CommandLineTools
#   sudo xcode-select --install
#
# Alternatively, manually download them from:
#  https://developer.apple.com/download/more/.
#
# Clear out CommandLineTools & re-install
sudo rm -rf /Library/Developer/CommandLineTools && sudo xcode-select --install


% font

# List installed fonts
fc-list


% macos

# Remove the developer cannot be verified message

xattr -d com.apple.quarantine <full_path_to_file>

# Disable Spotlight in a folder
touch .metadata_never_index

# Enable rosetta on m1
/usr/sbin/softwareupdate --install-rosetta


% rails

# Routes for specific controller
rails routes -c <controller_name>

# Update rails & dependencies
bundle update rails actionview actionpack activerecord activesupport railties activemodel --conservative


% postgres

# Create a directory snapshot
pg_dump --jobs=8 --format=d --file=<date>.snapshot.jay <database_name>

$ date: date -u +%Y-%m-%d

# Restore a directory snapshot (note: also run w/ --section=post-data after)
pg_restore --if-exists --no-owner --clean --create --format=d --jobs=8 --dbname=<database_name> <date>.snapshot.jay --section=pre-data --section=data

$ date: date -u +%Y-%m-%d


% zsh

# List directories ordered by size
du -hs * | sort -hr

# Count files in subdirectories
find . -type f | cut -d"/" -f2 | uniq -c

# Remove duplicates in zsh_history
cat -n .zsh_history | sort -t ';' -uk2 | sort -nk1 | cut -f2- > ~/.zsh_short_history && mv ~/.zsh_short_history ~/.zsh_history

# Sort files by number of lines
find <folder> -type f -exec wc -l {} + | sort -rn

# Sort file by lines greater than
awk 'length($0) > <max_length> {printf "%4d : %s(%4d):%s\n", length($0), FILENAME, FNR, $0}' <path_to_file>

# Fold long lines
fold -w <width> -s <input_file_name> > <output_file_name>


% ctags

# Generate tags in from multiple directories
ctags -R --append . <folders>

$ folders: lsd */ -d | tr '\n' ' ' | grep -f <(git ls-files | sed "s/\/.*//" | uniq) --- --multi

# Generate tags for bundled gems in a sub-folder
ctags -R --append . $(cd <folder> && bundle list --paths)

$ folder: lsd */ -d | grep -f <(git ls-files | sed "s/\/.*//" | uniq)

# Generate tags for a ruby repository
ctags -R --languages=ruby --exclude=.git --exclude=log . $(bundle list --paths)


% profiling

# Generate flamegraph with rbspy
sudo --preserve-env rbspy record <which_ruby> <file_name>

$ which_ruby: which ruby


% rg, ripgrep, zsh

# List files with lines greater than X characters
rg '.{<character_count>,}' <folder> -g '<file_glob>'

# Print line count of files in folder
rg -g '<file_glob>' --files . | xargs wc -l | sort


% curl

# curl GET URL as JSON
curl -H "Content-type: application/json" -H "Accept: application/json" "<url>"


% logs

# Use angle-grinder to parse Heroku router logs and find unique pages/paths
cat <log_file> | grep router | grep -Ev 'assets|favicon|png|manifest|robots|packs|wp-login|.env|php|svg|jpg' | agrind '* | logfmt | parse regex "path=\"(?P<url>[^? \"]+)" | fields url' > urls.txt


% ffmpeg

# Split mp4 into multiple files
ffmpeg -i <file> -c copy -vcodec copy -acodec copy -reset_timestamps 1 -segment_time 00:10:00 -f segment <file_base>-%03d.<file_extension>

$ file: ls


% shell

# https://stackoverflow.com/a/2556282/2892779
# Generate a random number in a range

shuf -i <start_range>-<end_range> -n 1


% aws

# Put a String parameter in SSM
aws ssm put-parameter --name '<parameter-name>' --region '<aws_region>' --type 'String' --value '<value>'

$ aws_region: echo us-west-2; echo us-west-1; echo us-east-2; echo us-east-1


% docker

# Remove all my locally build images
docker images -q | xargs docker rmi -f


% general, system

# Replace text in a file with sed
sed -i .bak 's/<string_to_replace>/<new_string>/' <file_name>

# List all files, but with some folders excluded
tree -a -I '.git|node_modules'


% ruby

# List options ruby 2.x+ was compiled/configured with
ruby -e "puts RbConfig::CONFIG['MAINLIBS']"


% ruby bundler

# Bundle audit and run updates
bundle audit check --update


% heroku

# Copy a file from a remote app, locally
heroku ps:copy <relative_file_path> -a <heroku_app_name>
